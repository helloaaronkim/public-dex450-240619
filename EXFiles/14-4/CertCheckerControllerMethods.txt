    @AuraEnabled(cacheable=true)
    public static List<Course_Attendee__c> getTechniciansAttendance(List<Id> techIds) {
        List<Course_Attendee__c> attendance = new List<Course_Attendee__c>();

        // 与えられた技術者（取引先責任者）ID に関連する、コース受講レコードを取得する
        try {
            attendance = [SELECT Id, Status__c, Course_Delivery__r.Course__r.Name, Course_Delivery__r.Start_Date__c, Student__r.Name 
                          FROM Course_Attendee__c 
                          WHERE Status__c = 'Completed' AND Student__c IN :techIds
                          WITH SECURITY_ENFORCED
                          ORDER BY Student__r.Name];            
        } catch (Exception e) {
            throw new AuraHandledException('コース受講レコードを取得できませんでした ' + e.getMessage());
        }

        return attendance;
    }

    @AuraEnabled(cacheable=true)
    public static List<Certification_Attempt__c> getTechniciansCertAttempts(List<Id> techIds) {
        List<Certification_Attempt__c> attempts = new List<Certification_Attempt__c>();

        // 与えられた技術者（取引先責任者）ID に関連する、資格受験レコードを取得する
        try {
            attempts = [SELECT Id, Status__c, Certification_Element__r.Name, Certification_Element__r.Certification__r.Name, 
                               Certification_Candidate__r.Name 
                        FROM Certification_Attempt__c 
                        WHERE Certification_Candidate__c IN :techIds
                        WITH SECURITY_ENFORCED
                        ORDER BY Certification_Candidate__r.Name];            
        } catch (Exception e) {
            throw new AuraHandledException('資格受験レコードを取得できませんでした ' + e.getMessage());
        }

        return attempts;
    }